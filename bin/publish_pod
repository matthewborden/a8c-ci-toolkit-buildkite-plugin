#!/bin/bash -eu

# Usage: publish_pod [OPTIONS] PODSPEC_PATH
#
# OPTIONS:
#  `--patch-cocoapods`:
#     Apply a patch to work around issues with older deployment targets — see https://github.com/CocoaPods/CocoaPods/issues/12033
#  `--allow-warnings`, `--synchronous`:
#     Those options are passed to `pod trunk push` verbatim.
#
# Note: Use `--synchronous` if you have co-dependant podspecs in your repo and need to publish multiple pods at the same time.
# Without this option, since the first pod you push will take time to propagate thru the CocoaPods CDNs, attempting to push
# the other dependant pod(s) in your repo might fail to find the first pushed pod until it has propagated thru CDNs.
#

PATCH_COCOAPODS="false"
COCOAPODS_FLAGS=(--verbose)

while [[ "$#" -gt 0 ]]; do
	case $1 in
		--patch-cocoapods)
			PATCH_COCOAPODS="true"
			;;
		--allow-warnings | --synchronous)
			COCOAPODS_FLAGS+=("$1")
			;;
		*) break ;;
	esac
	shift
done

PODSPEC_PATH=$1

# POD_NAME=$(bundle exec pod ipc spec "$PODSPEC_PATH" | jq -r '.name')
POD_VERSION=$(bundle exec pod ipc spec "$PODSPEC_PATH" | jq -r '.version')

if [ -n "$BUILDKITE_TAG" ] && [ "$BUILDKITE_TAG" != "$POD_VERSION" ]; then
	echo "Tag $BUILDKITE_TAG does not match version $POD_VERSION from $PODSPEC_PATH."
	exit 1
fi

if [[ "${PATCH_COCOAPODS}" ==  'true' ]]; then
	echo "⚠️ Remove this step once this issue is fixed: https://github.com/CocoaPods/CocoaPods/issues/12033"
	patch-cocoapods
fi

# For some reason this fixes a failure in `lib lint`
# https://github.com/Automattic/buildkite-ci/issues/7
xcrun simctl list >> /dev/null

bundle exec pod trunk push "${COCOAPODS_FLAGS[@]}" "$PODSPEC_PATH"
